
--1. Задавате схемата по подразбиране на схемата с вашия ФН (Например FN71000).
SET SCHEMA FN72008@

--2. Създавате модул във вашата схема.
CREATE MODULE HW2@

--3. Създавате асоциативен масив с индекс низ и стойности на масива също низове.
CREATE TYPE  NEWTYPE AS VARCHAR(100) ARRAY[VARCHAR(100)]@

ALTER MODULE FN72008.HW2 ADD TYPE NEWTYPE AS VARCHAR(100) ARRAY[VARCHAR(100)]@

-----------------------------------------
CREATE TABLE FN72008.BONUSEMPLOYEE(EMPNUMBER CHAR(6),BONUS DECIMAL (9,2))@

INSERT INTO FN72008.BONUSEMPLOYEE
SELECT EMPNO, BONUS FROM DB2INST1.EMP@

--SELECT * FROM FN72008.EMP@

ALTER MODULE FN72008.HW2 ADD VARIABLE BONUSCUR CURSOR CONSTANT (CURSOR FOR SELECT * FROM FN72008.BONUSEMPLOYEE)@

------------------------------

--ALTER MODULE FN72008.HW2 DROP PROCEDURE EMP_BONUSES()@


--4. Създавате процедура, в която да имате реализиран поне един cursor, един цикъл (for, while или друг) и да използвате дефинираният от вас асоциативен масив.
-- (Процедурата трябва да бъде част от модула). Използвайте таблиците EMP и DEPT от Домашно 1.

ALTER MODULE FN72008.HW2 PUBLISH PROCEDURE EMP_BONUSES()@

ALTER MODULE FN72008.HW2 ADD PROCEDURE EMP_BONUSES()
BEGIN
DECLARE EMP1 ANCHOR ROW FN72008.BONUSEMPLOYEE;
DECLARE EMPBONUS NEWTYPE;
DECLARE SQLCODE INT;
DECLARE EMPNUMBER ANCHOR FN72008.BONUSEMPLOYEE.EMPNUMBER;

OPEN BONUSCUR;

FETCH BONUSCUR INTO EMP1;
WHILE SQLCODE=0 DO
SET EMPBONUS[EMP1.EMPNUMBER]=EMP1.BONUS;
FETCH BONUSCUR INTO EMP1;
END WHILE;

SET EMPNUMBER=ARRAY_FIRST(EMPBONUS);
WHILE EMPNUMBER <> NULL DO
INSERT INTO FN72008.INPUT_MSG(MGS) VALUES ('Emploeyee number is: '|| EMPNUMBER || 'RECEIVED ' || EMPBONUS[EMPNUMBER]); 
SET EMPNUMBER = ARRAY_NEXT(EMPBONUS, EMPNUMBER);

END WHILE;
END@

--set SCHEMA FN72008@
--DROP TABLE INPUT_MSG@

CREATE TABLE FN72008.INPUT_MSG(MGS VARCHAR (500))@

--5. Извиквате процедурата.
CALL FN72008.HW2.EMP_BONUSES()@

SELECT * FROM fn72008.INPUT_MSG@


---------------------------------------------------------------------------------------------------------------------------
--Втора процедура със същото условие

CREATE TABLE FN72008.EMPDEPT(FIRSTNAME VARCHAR(12),DEPTNO CHAR(3))@

INSERT INTO FN72008.EMPDEPT
SELECT FIRSTNME,WORKDEPT FROM DB2INST1.EMP@
SELECT * FROM FN72008.EMPDEPT@

ALTER MODULE FN72008.HW2 ADD VARIABLE DEPTCUR1 CURSOR CONSTANT (CURSOR FOR SELECT * FROM FN72008.EMPDEPT)@



ALTER MODULE FN72008.HW2 DROP PROCEDURE EMP_DEPTS()@

ALTER MODULE FN72008.HW2 PUBLISH PROCEDURE EMP_DEPTS()@

ALTER MODULE FN72008.HW2 ADD PROCEDURE EMP_DEPTS()
BEGIN
DECLARE EMP1 ANCHOR ROW FN72008.EMPDEPT;
DECLARE NEWARR NEWTYPE;
DECLARE SQLCODE INT;
DECLARE FIRSTNAME ANCHOR FN72008.EMPDEPT.FIRSTNAME;

OPEN DEPTCUR1;

FETCH DEPTCUR1 INTO EMP1;
WHILE SQLCODE=0 DO
SET NEWARR[EMP1.FIRSTNAME]=EMP1.DEPTNO;
FETCH DEPTCUR1 INTO EMP1;
END WHILE;

SET FIRSTNAME=ARRAY_FIRST(NEWARR);
WHILE FIRSTNAME IS NOT NULL DO
INSERT INTO FN72008.INPUT_MSG2(MSG) VALUES ( FIRSTNAME || 'IS FROM ' || NEWARR[FIRSTNAME] || 'DEPARTMENT'); 
SET FIRSTNAME = ARRAY_NEXT(NEWARR, FIRSTNAME);

END WHILE;
END@

DROP TABLE FN72008.INPUT_MSG2@
CREATE TABLE FN72008.INPUT_MSG2(MSG VARCHAR (500) )@

CALL FN72008.HW2.EMP_DEPTS()@
SELECT * FROM fn72008.INPUT_MSG2@
